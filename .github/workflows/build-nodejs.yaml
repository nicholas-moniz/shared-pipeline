name: Build Node.js App
on:
  workflow_call:
    inputs:
      build-properties-path:
        description: "Relative path to the build-properties.json file"
        required: true
        type: string

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout caller
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }} 
          token: ${{ secrets.NICHOLAS_MONIZ_GITHUB_TOKEN }}
          path: ${{ github.event.repository.name }}

      - name: Get reusable workflow ref from caller run
        id: get-shared-ref
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.NICHOLAS_MONIZ_GITHUB_TOKEN }}
          script: |
            try {
              const run = await github.rest.actions.getWorkflowRun({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: context.runId,
              });
      
              const referencedWorkflows = run.data.referenced_workflows;
      
              if (!referencedWorkflows || referencedWorkflows.length === 0) {
                throw new Error("No referenced workflows found in this run");
              }
      
              const path = referencedWorkflows[0].path;
      
              const match = path.match(/\/([^\/]+)@/);
              if (!match) {
                throw new Error(`Could not extract workflow filename from path: ${path}`);
              }
      
              const workflowFile = match[1];
              const workflowRef = path.split("@")[1];
      
              core.setOutput("workflow", workflowFile);
              core.setOutput("library_ref", workflowRef);
      
              core.info(`Extracted reusable workflow: ${workflowFile}@${workflowRef}`);
            } catch (error) {
              core.setFailed(`Failed to get reusable workflow ref: ${error.message}`);
            }

      - name: Checkout shared-pipeline
        uses: actions/checkout@v4
        with:
          repository: nicholas-moniz/shared-pipeline    
          token: ${{ secrets.NICHOLAS_MONIZ_GITHUB_TOKEN }}
          path: shared-pipeline
          ref: ${{ steps.get-shared-ref.outputs.library_ref }}

      - name: Make all utility scripts executable
        working-directory: shared-pipeline/scripts
        run: chmod +x *.sh
        
      - name: Install npm modules
        working-directory: shared-pipeline
        run: npm ci

      - name: Setup tools
        uses: ./shared-pipeline/.github/actions/setup-tools

      - name: Set environment variables
        uses: ./shared-pipeline/.github/actions/set-env-vars
        env:
          BUILD_PROPERTIES_PATH: ${{ inputs.build-properties-path }}
          LIBRARY_VERSION: ${{ steps.get-shared-ref.outputs.library_ref }}
          WORKFLOW: ${{ steps.get-shared-ref.outputs.workflow }}
          SECRETS: ${{ toJson(secrets) }}

      - name: Validate build properties
        uses: ./shared-pipeline/.github/actions/validate-build-properties
        
      - name: Cache Workspace
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}
          key: ${{ runner.os }}-workspace-${{ github.run_id }}-${{ github.run_attempt }}
          
  next-job:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}
          key: ${{ runner.os }}-workspace-${{ github.run_id }}-${{ github.run_attempt }}
